{"ast":null,"code":"import * as crypto from 'crypto';\nexport function generateRSAKeyPair() {\n  const _crypto$generateKeyPa = crypto.generateKeyPairSync('rsa', {\n    modulusLength: 4096,\n    publicKeyEncoding: {\n      type: 'spki',\n      format: 'pem'\n    },\n    privateKeyEncoding: {\n      type: 'pkcs8',\n      format: 'pem',\n      cipher: 'aes-128-cbc',\n      passphrase: 'top secret'\n    }\n  }),\n        publicKey = _crypto$generateKeyPa.publicKey,\n        privateKey = _crypto$generateKeyPa.privateKey;\n\n  const keyPair = {\n    publicKey: publicKey,\n    privateKey: privateKey\n  };\n  return keyPair;\n}","map":{"version":3,"sources":["C:/Users/valik/react-apps/cs/lab2-1/src/components/RSAGenerator.js"],"names":["crypto","generateRSAKeyPair","generateKeyPairSync","modulusLength","publicKeyEncoding","type","format","privateKeyEncoding","cipher","passphrase","publicKey","privateKey","keyPair"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AAEA,OAAO,SAASC,kBAAT,GAA8B;AAAA,gCACCD,MAAM,CAACE,mBAAP,CAA2B,KAA3B,EAAkC;AAChEC,IAAAA,aAAa,EAAE,IADiD;AAEhEC,IAAAA,iBAAiB,EAAE;AACfC,MAAAA,IAAI,EAAE,MADS;AAEfC,MAAAA,MAAM,EAAE;AAFO,KAF6C;AAMhEC,IAAAA,kBAAkB,EAAE;AAChBF,MAAAA,IAAI,EAAE,OADU;AAEhBC,MAAAA,MAAM,EAAE,KAFQ;AAGhBE,MAAAA,MAAM,EAAE,aAHQ;AAIhBC,MAAAA,UAAU,EAAE;AAJI;AAN4C,GAAlC,CADD;AAAA,QACzBC,SADyB,yBACzBA,SADyB;AAAA,QACdC,UADc,yBACdA,UADc;;AAejC,QAAMC,OAAO,GAAG;AACZF,IAAAA,SAAS,EAAEA,SADC;AAEZC,IAAAA,UAAU,EAAEA;AAFA,GAAhB;AAIA,SAAOC,OAAP;AACH","sourcesContent":["import * as crypto from 'crypto'\r\n\r\nexport function generateRSAKeyPair() {\r\n    const { publicKey, privateKey } = crypto.generateKeyPairSync('rsa', {\r\n        modulusLength: 4096,\r\n        publicKeyEncoding: {\r\n            type: 'spki',\r\n            format: 'pem'\r\n        },\r\n        privateKeyEncoding: {\r\n            type: 'pkcs8',\r\n            format: 'pem',\r\n            cipher: 'aes-128-cbc',\r\n            passphrase: 'top secret'\r\n        }\r\n    })\r\n\r\n    const keyPair = {\r\n        publicKey: publicKey,\r\n        privateKey: privateKey\r\n    }\r\n    return keyPair;\r\n}"]},"metadata":{},"sourceType":"module"}