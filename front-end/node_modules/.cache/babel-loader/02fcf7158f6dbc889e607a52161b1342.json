{"ast":null,"code":"const AES = require('aes-js');\n\nexport function encryptAES_CBC(key, source) {\n  let keyBytes = new TextEncoder(\"utf-8\").encode(key);\n  let iv = [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36];\n  let sourceBytes = AES.utils.utf8.toBytes(source);\n  let AES_CBC = new AES.ModeOfOperation.cbc(keyBytes, iv);\n  let encryptedSourceBytes = AES_CBC.encrypt(sourceBytes);\n  const encryptedSourceUTF8 = AES.utils.utf8.fromBytes(encryptedSourceBytes);\n  return encryptedSourceUTF8;\n}","map":{"version":3,"sources":["C:/Users/valik/react-apps/cs/lab2-1/src/components/AESUtils.js"],"names":["AES","require","encryptAES_CBC","key","source","keyBytes","TextEncoder","encode","iv","sourceBytes","utils","utf8","toBytes","AES_CBC","ModeOfOperation","cbc","encryptedSourceBytes","encrypt","encryptedSourceUTF8","fromBytes"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEA,OAAO,SAASC,cAAT,CAAwBC,GAAxB,EAA6BC,MAA7B,EAAqC;AAExC,MAAIC,QAAQ,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,EAAyBC,MAAzB,CAAgCJ,GAAhC,CAAf;AACA,MAAIK,EAAE,GAAG,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,EAAtD,EAAyD,EAAzD,EAA6D,EAA7D,CAAT;AACA,MAAIC,WAAW,GAAGT,GAAG,CAACU,KAAJ,CAAUC,IAAV,CAAeC,OAAf,CAAuBR,MAAvB,CAAlB;AAEA,MAAIS,OAAO,GAAG,IAAIb,GAAG,CAACc,eAAJ,CAAoBC,GAAxB,CAA4BV,QAA5B,EAAsCG,EAAtC,CAAd;AACA,MAAIQ,oBAAoB,GAAGH,OAAO,CAACI,OAAR,CAAgBR,WAAhB,CAA3B;AACA,QAAMS,mBAAmB,GAAGlB,GAAG,CAACU,KAAJ,CAAUC,IAAV,CAAeQ,SAAf,CAAyBH,oBAAzB,CAA5B;AAEA,SAAOE,mBAAP;AAEH","sourcesContent":["const AES = require('aes-js');\r\n\r\nexport function encryptAES_CBC(key, source) {\r\n\r\n    let keyBytes = new TextEncoder(\"utf-8\").encode(key);\r\n    let iv = [ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,35, 36 ];\r\n    let sourceBytes = AES.utils.utf8.toBytes(source);\r\n    \r\n    let AES_CBC = new AES.ModeOfOperation.cbc(keyBytes, iv);\r\n    let encryptedSourceBytes = AES_CBC.encrypt(sourceBytes);\r\n    const encryptedSourceUTF8 = AES.utils.utf8.fromBytes(encryptedSourceBytes);\r\n\r\n    return encryptedSourceUTF8;\r\n\r\n}"]},"metadata":{},"sourceType":"module"}