{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valik\\\\react-apps\\\\cs\\\\lab2-1\\\\src\\\\components\\\\Main.js\";\nimport React from 'react';\nimport Form from './Form';\nimport { generateRSAKeyPair } from './RSAGenerator';\n\nconst _require = require('crypto'),\n      generateKeyPairSync = _require.generateKeyPairSync;\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      publicKey: null,\n      privateKey: null\n    };\n  }\n\n  onSubmit() {\n    const _generateKeyPairSync = generateKeyPairSync('rsa', {\n      modulusLength: 4096,\n      publicKeyEncoding: {\n        type: 'spki',\n        format: 'pem'\n      },\n      privateKeyEncoding: {\n        type: 'pkcs8',\n        format: 'pem',\n        cipher: 'aes-256-cbc',\n        passphrase: 'top secret'\n      }\n    }),\n          publicKey = _generateKeyPairSync.publicKey,\n          privateKey = _generateKeyPairSync.privateKey;\n\n    alert(publicKey);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: () => this.onSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/valik/react-apps/cs/lab2-1/src/components/Main.js"],"names":["React","Form","generateRSAKeyPair","require","generateKeyPairSync","Main","Component","constructor","props","state","publicKey","privateKey","onSubmit","modulusLength","publicKeyEncoding","type","format","privateKeyEncoding","cipher","passphrase","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;;iBACgCC,OAAO,CAAC,QAAD,C;MAA/BC,mB,YAAAA,mB;;AAGR,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,QAAQ,GAAG;AAAA,iCAE2BR,mBAAmB,CAAC,KAAD,EAAQ;AACzDS,MAAAA,aAAa,EAAE,IAD0C;AAEzDC,MAAAA,iBAAiB,EAAE;AACfC,QAAAA,IAAI,EAAE,MADS;AAEfC,QAAAA,MAAM,EAAE;AAFO,OAFsC;AAMzDC,MAAAA,kBAAkB,EAAE;AAChBF,QAAAA,IAAI,EAAE,OADU;AAEhBC,QAAAA,MAAM,EAAE,KAFQ;AAGhBE,QAAAA,MAAM,EAAE,aAHQ;AAIhBC,QAAAA,UAAU,EAAE;AAJI;AANqC,KAAR,CAF9C;AAAA,UAECT,SAFD,wBAECA,SAFD;AAAA,UAEYC,UAFZ,wBAEYA,UAFZ;;AAgBPS,IAAAA,KAAK,CAACV,SAAD,CAAL;AAEH;;AAGDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,MAAM,KAAKT,QAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AArC6C","sourcesContent":["import React from 'react'\r\nimport Form from './Form';\r\nimport { generateRSAKeyPair } from './RSAGenerator'\r\nconst { generateKeyPairSync } = require('crypto');\r\n\r\n\r\nexport default class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            publicKey: null,\r\n            privateKey: null\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n\r\n        const { publicKey, privateKey } = generateKeyPairSync('rsa', {\r\n            modulusLength: 4096,\r\n            publicKeyEncoding: {\r\n                type: 'spki',\r\n                format: 'pem'\r\n            },\r\n            privateKeyEncoding: {\r\n                type: 'pkcs8',\r\n                format: 'pem',\r\n                cipher: 'aes-256-cbc',\r\n                passphrase: 'top secret'\r\n            }\r\n        });\r\n\r\n        alert(publicKey);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={() => this.onSubmit()} />\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}