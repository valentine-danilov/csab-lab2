{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valik\\\\react-apps\\\\cs\\\\lab2-1\\\\src\\\\components\\\\Main.js\";\nimport React from 'react';\nimport Form from './Form';\nimport { generateRSAKeyPair } from './RSAGenerator';\nimport { requestToken } from './Fetch';\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      publicKey: null,\n      privateKey: null,\n      token: null\n    };\n  }\n\n  onSubmit() {\n    const publicKey = this.state.publicKey;\n\n    if (publicKey) {\n      const token = requestToken(this.state.publicKey);\n\n      if (!token) {\n        alert(\"Can't get token\");\n        return;\n      }\n\n      this.setState({\n        token: token\n      });\n    } else {\n      alert('No public key generated');\n    }\n  }\n\n  generateKeys() {\n    const keyPair = generateRSAKeyPair();\n    this.setState({\n      publicKey: keyPair.publicKey,\n      privateKey: keyPair.privateKey\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.publicKey), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.token), React.createElement(Form, {\n      onSubmit: () => this.onSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.generateKeys(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Generate Keys\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/valik/react-apps/cs/lab2-1/src/components/Main.js"],"names":["React","Form","generateRSAKeyPair","requestToken","Main","Component","constructor","props","state","publicKey","privateKey","token","onSubmit","alert","setState","generateKeys","keyPair","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,QAAQ,GAAG;AACP,UAAMH,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA7B;;AACA,QAAIA,SAAJ,EAAe;AACX,YAAME,KAAK,GAAGR,YAAY,CAAC,KAAKK,KAAL,CAAWC,SAAZ,CAA1B;;AACA,UAAG,CAACE,KAAJ,EAAW;AACPE,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACA;AACH;;AACD,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAEA;AADG,OAAd;AAGH,KATD,MASO;AACHE,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AAEJ;;AAEDE,EAAAA,YAAY,GAAG;AACX,UAAMC,OAAO,GAAGd,kBAAkB,EAAlC;AACA,SAAKY,QAAL,CAAc;AACVL,MAAAA,SAAS,EAAEO,OAAO,CAACP,SADT;AAEVC,MAAAA,UAAU,EAAEM,OAAO,CAACN;AAFV,KAAd;AAIH;;AAGDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWC,SAAf,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKE,KAAT,CAFJ,EAGI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,MAAM,KAAKC,QAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKG,YAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ;AAQH;;AA9C6C","sourcesContent":["import React from 'react'\r\nimport Form from './Form';\r\nimport { generateRSAKeyPair } from './RSAGenerator'\r\nimport { requestToken } from './Fetch'\r\n\r\nexport default class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            publicKey: null,\r\n            privateKey: null,\r\n            token: null\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        const publicKey = this.state.publicKey;\r\n        if (publicKey) {\r\n            const token = requestToken(this.state.publicKey);\r\n            if(!token) {\r\n                alert(\"Can't get token\")\r\n                return;\r\n            }\r\n            this.setState({\r\n                token: token\r\n            });\r\n        } else {\r\n            alert('No public key generated');\r\n        }\r\n\r\n    }\r\n\r\n    generateKeys() {\r\n        const keyPair = generateRSAKeyPair();\r\n        this.setState({\r\n            publicKey: keyPair.publicKey,\r\n            privateKey: keyPair.privateKey\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{this.state.publicKey}</p>\r\n                <p>{this.token}</p>\r\n                <Form onSubmit={() => this.onSubmit()} />\r\n                <button type=\"button\" onClick={() => this.generateKeys()}>Generate Keys</button>\r\n            </div >\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}